openapi: 3.0.1
info:
  title: Yodlee Link Account APIs
  description: | 
    # Introduction
    
    This page describes the Yodlee APIs that you require to build your own link account experience, using the swagger notation. Yodlee supports the java SDK and is available <a href="https://mvnrepository.com/artifact/com.yodlee/yodlee-java-sdk">here</a>. If you wish to generate the client SDK in Python, javascript, PHP, or any other languages according to your development needs, you can download the OpenAPI spec from <a href="https://github.com/Yodlee/yaml/">here</a>. 
    <br> <br>For more details about our other APIs, please refer to <a href="/api-reference">API reference</a> page
    
    
  contact:
    email: developer@yodlee.com
  version: 1.1.0
servers:
- url: /
tags:
- name: Consents
  description: Consents API
- name: Institutions
  description: Institutions API
- name: ProviderAccounts
  description: Provider Accounts API
- name: Providers
  description: Providers API
paths:
  /providers:
    get:
      tags:
      - Providers
      summary: Get Providers
      description: 'The get provider service is used to get all the providers that
        are enabled, search a provider service by name or routing number and get popular
        sites of a region. <br>Searching for a provider using a routing number is
        applicable only to the USA and Canada regions.<br>The valid values for priority
        are: <br>   1. cobrand: Returns providers enabled for the cobrand (Default
        priority)<br>   2. popular: Returns providers popular among users of the customer<br><br>Only
        the datasets, attributes, and containers that are enabled for the customer
        will be returned in the response.<br>Input for the dataset$filter should adhere
        to the following expression:<br><dataset.name>[<attribute.name>.container[<container>
        OR <container>] OR <attribute.name>.container[<container>]] <br>OR <dataset.name>[<attribute.name>
        OR <attribute.name>]<br><b>dataset$filter value examples:</b><br>ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank
        OR investment OR creditCard]]<br>ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]<br>BASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank
        OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]<br>BASIC_AGG_DATA<br>BASIC_AGG_DATA
        OR ACCT_PROFILE<br>BASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]<br>BASIC_AGG_DATA
        [ ACCOUNT_DETAILS] OR DOCUMENT <br>BASIC_AGG_DATA [ BASIC_ACCOUNT_INFO OR
        ACCOUNT_DETAILS ] <br><br>The fullAcountNumberFields is specified to filter the providers that have paymentAccountNumber or unmaskedAccountNumber support in the FULL_ACCT_NUMBER dataset attribute.<br><b>Examples for usage of fullAccountNumberFields </b><br>dataset$filter=ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp; fullAccountNumberFields=paymentAccountNumber<br>dataset$filter=ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp; fullAccountNumberFields=unmaskedAccountNumber<br>dataset$filter=ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp; fullAccountNumberFields=unmaskedAccountNumber,paymentAccountNumber<br><br>The skip and top parameters are used for pagination.
        In the skip and top parameters, pass the number of records to be skipped and
        retrieved, respectively.<br>The response header provides the links to retrieve
        the next and previous set of transactions.<br><br><b>Note:</b> <br>1. In a
        product flow involving user interaction, Yodlee recommends invoking this service
        with filters.<br>2. Without filters, the service may perform slowly as it
        takes a few minutes to return data in the response.<br>3. The AuthParameter
        appears in the response only in case of token-based aggregation sites.<br>4.
        The pagination feature only applies when the priority parameter is set as
        cobrand. If no values are provided in the skip and top parameters, the API
        will only return the first 500 records.<br>5. This service supports the localization
        feature and accepts locale as a header parameter.<br>6. The capability has been deprecated in query parameter and response.'
      operationId: getAllProviders
      parameters:
      - name: capability
        in: query
        description: CHALLENGE_DEPOSIT_VERIFICATION
        deprecated: true
        allowEmptyValue: false
        schema:
          type: string
      - name: dataset$filter
        in: query
        description: Expression to filter the providers by dataset(s) or dataset attribute(s).
          The default value will be the dataset or dataset attributes configured as
          default for the customer.
        allowEmptyValue: false
        schema:
          type: string
      - name: fullAccountNumberFields
        in: query
        description: Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber.
        allowEmptyValue: false
        schema:
          type: string
      - name: institutionId
        in: query
        description: Institution Id for Single site selection
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name in minimum 1 character or routing number.
        allowEmptyValue: false
        schema:
          type: string
      - name: priority
        in: query
        description: Search priority
        allowEmptyValue: false
        schema:
          type: string
      - name: providerId
        in: query
        description: Max 5 Comma seperated Provider Ids
        allowEmptyValue: false
        schema:
          type: string
      - name: skip
        in: query
        description: skip (Min 0) - This is not applicable along with 'name' parameter.
        allowEmptyValue: false
        schema:
          type: integer
          format: int32
      - name: top
        in: query
        description: top (Max 500) - This is not applicable along with 'name' parameter.
        allowEmptyValue: false
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
        400:
          description: 'Y800 : Invalid value for priority<br>Y800 : Invalid value
            for providerName<br>Y801 : Invalid length for a site search. The search
            string must have atleast 1 character<br>Y800 : Invalid value for skip<br>Y804
            : Permitted values of top between 1 - 500<br>Y821 : Dataset not supported<br>Y820
            : The additionalDataSet is not supported for Get provider API'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /providers/{providerId}:
    get:
      tags:
      - Providers
      summary: Get Provider Details
      description: The get provider detail service is used to get detailed information
        including the login form for a provider.<br>The response is a provider object
        that includes information such as name of the provider, <br>provider's base
        URL, a list of containers supported by the provider, the login form details
        of the provider, etc.<br>Only enabled datasets, attributes and containers
        gets returned in the response.<br><br><b>Note:</b>This service supports the localization
        feature and accepts locale as a header parameter.<br>
      operationId: getProvider
      parameters:
      - name: providerId
        in: path
        description: providerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProviderDetailResponse'
        400:
          description: 'Y800 : Invalid value for providerId'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /consents:
    post:
      tags:
      - Consents
      summary: Create Consent
      description: The generate consent service is used to generate all the consent
        information and permissions associated to a provider. <br/>The scope provided
        in the response is based on the providerId and the datasets provided in the
        input. <br/>If no dataset value is provided, the datasets that are configured
        for the customer will be considered. <br/>The configured dataset can be overridden
        by providing the dataset as an input. <br/>If no applicationName is provided
        in the input, the default applicationName will be considered. <b>Note:</b>This
        service supports the localization feature and accepts locale as a header parameter.<br>
      operationId: createConsent
      requestBody:
        description: Unique identifier for the provider site(mandatory), the name
          of the application,  <br/>the flag responsible to include html content in
          the response, <br/>when passed as true and the name of the dataset attribute
          supported by the provider.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsentRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedConsentResponse'
        400:
          description: 'Y800 : Invalid value for providerId <br/>Y807 : Resource not
            found <br/>Y800 : Invalid value for consentParam <br/>Y901 : Service not
            supported <br/>Y800 : Invalid value for applicationName <br/>'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: consentRequest
    get:
      tags:
      - Consents
      summary: Get All Consents
      description: The get consent service is used to retrieve all the consents submitted
        to Yodlee. <br>The service can be used to build a manage consent interface
        or a consent dashboard to implement the renew and revoke consent flows.<br><b>Note:</b>This
        service supports the localization feature and accepts locale as a header parameter.<br>
      operationId: getConsents
      parameters:
      - name: consentIds
        in: query
        description: Consent Id generated through POST Consent.
        allowEmptyValue: false
        schema:
          type: string
      - name: providerAccountIds
        in: query
        description: Unique identifier for the provider account resource. This is
          created during account addition.
        allowEmptyValue: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /consents/{consentId}:
    put:
      tags:
      - Consents
      summary: Provide Consent
      description: The update consent service is used to capture the user acceptance
        of the consent presented to him or her. <br/>This service returns the authorization-redirect
        URL that should be used to display to the user, the bank's authentication
        interface.<br><b>Note:</b>This service supports the localization feature and accepts
        locale as a header parameter.<br>
      operationId: updateConsent
      parameters:
      - name: consentId
        in: path
        description: Consent Id generated through POST Consent.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Applicable Open Banking data cluster values.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConsentRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedConsentResponse'
        400:
          description: 'Y800 : Invalid value for consentId <br/>Y800 : Invalid value
            for consentParam <br/>Y812 : Required field/value - scopeId missing in
            the consentParam <br/>'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: consentRequest
    get:
      tags:
      - Consents
      summary: Get Consent Details
      description: The get authorization URL for consent service provides the authorization
        URL for the renew consent flow, within the consent dashboard.<b>Note:</b>This
        service supports the localization feature and accepts locale as a header parameter.<br>
      operationId: getConsentDetails
      parameters:
      - name: consentId
        in: path
        description: Consent Id generated through POST Consent.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UpdatedConsentResponse'
        400:
          description: 'Y800 : Invalid value for consentId <br/>'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /providerAccounts:
    post:
      tags:
      - ProviderAccounts
      summary: Add Account
      description: 'The add account service is used to link the user''s account with
        the provider site in the Yodlee system. Providers that require multifactor
        authentication or open banking are also supported by this service. The response
        includes the Yodlee generated ID (providerAccountId) of the account along
        with the refresh information.<br><br>Open Banking Implementation Notes: <br>To
        link the user''s account of the Open Banking provider site in the Yodlee system,
        pass the field entity that contains:<br>1. id - From the authParameters provided
        in the GET provider details service<br>2. value - From the redirect URL of
        the Open Banking site<br><br>Credential-based Implementation Notes: <br>1.
        The loginForm or the field array are the objects under the provider object,
        obtained from the GET provider details service response.<br>2. The credentials provided by the
        user should be embedded in the loginForm or field array object.<br>3. While
        testing the <a href="/docs/api/1.1/link-account/credential-based-aggregation/credential-encryption">encryption
        </a> feature, encrypt the credentials using the <a href="/docs/api/1.1/link-account/credential-based-aggregation/credential-encryption/encrypt.html">encryption
        utility</a>.<br>4. The data to be retrieved from the provider site can be
        passed using datasetName or dataset. If datasetName is passed, all the attributes
        that are implicitly configured for the dataset will be retrieved.<br>5. If
        the customer has not subscribed to the REFRESH event webhooks notification
        for accounts that require multifactor authentication (MFA), the GET providerAccount
        service has to be called continuously till the login form (supported types
        are token, question & answer, and captcha) is returned in the response.<br>6.
        The update account service should be called to post the MFA information to continue
        adding the account.<br><br>Generic Implementation Notes:<br>1. Refer to the
        <a href="/docs/api/1.1/link-account/credential-based-aggregation/API-flow">add account</a>
        flow chart for implementation.<br>2. The GET provider account details has
        <a href="/docs/api/1.1/link-account/refresh-webhooks">webhooks
        support</a>. If the customer has subscribed to the REFRESH event notification
        and has invoked this service to add an account, relevant notifications will
        be sent to the callback URL.<br>3. If you had not subscribed for notifications,
        the GET provider account </a> details service has to be polled continuously till the
        account addition status is FAILED or PARTIAL_SUCCESS or SUCCESS. <br>4. A
        dataset may depend on another dataset for retrieval, so the response will
        include the requested datasets and the dependent datasets.<br>   It is necessary
        to check all the dataset additional statuses returned in the response, as
        the provider account status is drawn from the dataset additional statuses.<br>5.
        Pass linkedProviderAccountId in the input to link a user''s credential-based
        providerAccount with the open banking providerAccount. Ensure that the credential-based
        providerAccount belongs to the same institution. <br>6. The content type has
        to be passed as application/json in the body parameter.'
      operationId: linkProviderAccount
      parameters:
      - name: providerId
        in: query
        description: providerId
        required: true
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: loginForm or field entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderAccountRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddedProviderAccountResponse'
        400:
          description: 'Y803 : providerId is mandatory<br>Y803 : Invalid value for
            credentialsParam<br>Y400 : id and value in credentialsParam are mandatory<br>Y901
            : Service not supported'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: providerAccountRequest
    put:
      tags:
      - ProviderAccounts
      summary: Update Account
      description: '<b>Credential-based Implementation Notes:</b> <br>The update account
        API is used to:<br> &bull; Retrieve the latest information for accounts that
        belong to one providerAccount from the provider site. You must allow at least
        15 min between requests. <br> &bull; Update account credentials when the user
        has changed the authentication information at the provider site. <br> &bull;
        Post MFA information for the MFA-enabled provider accounts during add and
        update accounts. <br> &bull; Retrieve the latest information of all the eligible
        accounts that belong to the user. <br><br><b>Edit Credentials Notes: </b>
        <br> &bull; If credentials have to be updated in the Yodlee system, one of
        the following should be provided: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#9702;
        LoginForm <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#9702; Field
        array <br> &bull; LoginForm or the field array, can be obtained from the GET
        providerAccounts/{providerAccountId}?include=credentials API response. <br>
        &bull; The credentials provided by the user should be embedded in the loginForm
        or field array object before you pass to this API. <br><br><b>Posting MFA Info
        Notes: </b> <br>1. You might receive the MFA request details to be presented
        to the end user in the GET providerAccounts/{providerAccount} API during polling
        or through REFRESH webhooks notificaiton. <br>2. After receiving the inputs
        from your user: <br>&nbsp;&nbsp;&nbsp;&nbsp;a.Embed the MFA information provided
        by the user in the loginForm or field array object.<br>&nbsp;&nbsp;&nbsp;&nbsp;b.Pass
        one of the following objects as input to this API:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull;
        LoginForm<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull; Field
        array<br/><br><b>Points to consider:</b><br>&bull; Data to be retrieved from
        the provider site can be overridden using datasetName or dataset. If you do
        pass datasetName, all the datasets that are implicitly configured for <br>the
        dataset will be retrieved. This action is allowed for edit credentials and
        single provider account refresh flows only. <br>&bull; Encrypt the credentials
        and MFA information using the public key.<br>&bull; While testing the PKI
        feature in sandbox environment, encrypt the password credentials and answers
        to the MFA questions using the encryption tool.<br/><br><br><b>Open Banking
        (OB)-based Authentication Notes:</b><br>The update account API is used to:<br>&bull;
        Retrieve the latest information for accounts from the provider site.<br>&bull;
        Update the renewed consent for an existing provider account.<br>&bull; Retrieve
        the latest information for all the eligible accounts that belong to the user.<br/><br>Yodlee
        recommendations: <br/>&bull; Create the field entity with the authParameters
        provided in the get provider details API.<br>&bull; Populate the field entity
        with the values received from the OB site and pass it to this API.<br/><br><br><b>Update
        All Eligible Accounts Notes: </b><br>&bull; This API will trigger a refresh
        for all the eligible provider accounts(both OB and credential-based accounts).<br>&bull;
        This API will not refresh closed, inactive, or UAR accounts, or accounts with
        refreshes in-progress or recently refreshed non-OB accounts.<br>&bull; No
        parameters should be passed to this API to trigger this action.<br>&bull;
        Do not call this API often. Our recommendation is to call this only at the
        time the user logs in to your app because it can hamper other API calls performance.
        <br>&bull; The response only contains information for accounts that were refreshed.
        If no accounts are eligible for refresh, no response is returned.<br/><br><br><b>What
        follows are common to both OB and credential-based authentication implementations:  </b><br>&bull;
        Check the status of the providerAccount before invoking this API. Do not call
        this API to trigger any action on a providerAccount when an action is already
        in progress for the providerAccount. <br>&bull; If the customer has subscribed
        to the REFRESH event notification and invoked this API, relevant notifications
        will be sent to the customer.<br>&bull; A dataset may depend on another dataset
        for retrieval, so the response will include the requested and dependent datasets.<br>&bull;
        Check all the dataset additional statuses returned in the response because
        the provider account status is drawn from the dataset additional statuses.<br>&bull;
        Updating preferences using this API will trigger refreshes.<br>&bull; Pass
        linkedProviderAccountId in the input to link a user''s credential-based providerAccount
        with the OB providerAccount or viceversa. Ensure that the both the providerAccounts
        belong to the same institution. <br>&bull; The content type has to be passed
        as application/json for the body parameter.<br>'
      operationId: editCredentialsOrRefreshProviderAccount
      parameters:
      - name: providerAccountIds
        in: query
        description: comma separated providerAccountIds
        required: false
        allowEmptyValue: false
        schema:
          type: string
      requestBody:
        description: loginForm or field entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderAccountRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UpdatedProviderAccountResponse'
        400:
          description: 'Y805 : Multiple providerAccountId not supported for updating
            credentials<br>Y800 : Invalid value for credentialsParam<br>Y400 : id
            and value in credentialsParam are mandatory<br>Y806 : Invalid input<br>Y823
            : Credentials are not applicable for real estate aggregated / manual accounts<br>Y868
            : No action is allowed, as the data is being migrated to the Open Banking
            provider<br>'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: providerAccountRequest
    get:
      tags:
      - ProviderAccounts
      summary: Get Provider Accounts
      description: The get provider accounts service is used to return all the provider
        accounts added by the user. <br>This includes the failed and successfully
        added provider accounts.<br>
      operationId: getAllProviderAccounts
      parameters:
      - name: include
        in: query
        description: include
        required: false
        schema:
          type: string
      - name: providerIds
        in: query
        description: Comma separated providerIds.
        allowEmptyValue: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProviderAccountResponse'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /providerAccounts/{providerAccountId}:
    get:
      tags:
      - ProviderAccounts
      summary: Get Provider Account Details
      description: The get provider account details service is used to learn the status
        of adding accounts and updating accounts.<br>This service has to be called
        continuously to know the progress level of the triggered process. This service
        also provides the MFA information requested by the provider site.<br>When
        include=credentials,questions is passed as input, the service returns the
        credentials (non-password values) and questions stored in the Yodlee system
        for that provider account. <br><b>Note:</b> The password and answer fields
        are not returned in the response.<br>
      operationId: getProviderAccount
      parameters:
      - name: include
        in: query
        description: include credentials,questions
        allowEmptyValue: false
        schema:
          type: string
      - name: providerAccountId
        in: path
        description: providerAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: requestId
        in: query
        description: The unique identifier for the request that returns contextual
          data
        allowEmptyValue: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProviderAccountDetailResponse'
        400:
          description: 'Y800 : Invalid value for providerAccountId<br>Y816 : questions
            can only be requested for questionAndAnswer Supported Sites'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /institutions:
    get:
      tags:
      - Institutions
      summary: Get institutions
      description: "Yodlee classifies providers into credential-based aggregation\
        \ and Open Banking (OB) providers. The get institutions service helps in identifying\
        \ credential and related OB sites in a financial institution. The service\
        \ searches for an institution regardless of the authentication types associated\
        \ with the providers. Using the get institutions service, retrieve institutions\
        \ enabled for the customer, search an institution by its name or routing number,\
        \ and retrieve the popular institutions for a region. Searching for an institution\
        \ using a routing number applies only to the USA and Canada regions.<br><br> The\
        \ valid values for the priority parameter are: <br/> 1.\t<b>all</b>: Returns all\
        \ the institutions enabled for the customer (the default value for the priority\
        \ parameter).<br/> 2.\t<b>search</b>: Returns institutions matching the name provided\
        \ by the user. The name parameter is mandatory if the priority parameter is\
        \ set as search.<br/> 3.\t<b>popular</b>: Returns institutions that are popular among\
        \ the customer's users.<br/> Only the datasets, attributes, and containers\
        \ that are enabled for the customer will be returned in the response.<br><br>Input\
        \ for the dataset$filter should adhere to the following expression:<dataset.name>[<attribute.name>.container[<container>\
        \ OR <container>] OR <attribute.name>.container[<container>]] <br>OR <dataset.name>[<attribute.name>\
        \ OR <attribute.name>]<br><b>dataset$filter value examples:</b><br>ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank\
        \ OR investment OR creditCard]]<br>ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]<br>BASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank\
        \ OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]<br>BASIC_AGG_DATA<br>BASIC_AGG_DATA\
        \ OR ACCT_PROFILE<br>BASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]<br>BASIC_AGG_DATA\
        \ [ ACCOUNT_DETAILS] OR DOCUMENT <br>BASIC_AGG_DATA [ BASIC_ACCOUNT_INFO OR\
        \ ACCOUNT_DETAILS ] <br><br>The skip and top parameters are used for pagination.\
        \ In the skip and top parameters, pass the number of records to be skipped\
        \ and retrieved, respectively.<br>The response header provides the links to\
        \ retrieve the next and previous set of transactions.<br><br><b>Note:</b>\
        \ <br> 1. If no value is set for the priority parameter, all the institutions\
        \ enabled for the customer will be returned.<br/> 2. In a product flow involving\
        \ user interaction, Yodlee recommends invoking this service with filters.<br/>\
        \ Without filters, the service may perform slowly as it takes a few minutes\
        \ to return data in the response.<br/> 3. The response includes comma separated\
        \ provider IDs that are associated with the institution.<br/> 4. This service\
        \ supports the localization feature and accepts locale as a header parameter.<br>"
      operationId: getInstitutions
      parameters:
      - name: dataset$filter
        in: query
        description: Expression to filter the providers by dataset(s) or dataset attribute(s).
          The default value will be the dataset or dataset attributes configured as
          default for the customer.
        allowEmptyValue: false
        schema:
          type: string
      - name: name
        in: query
        description: Name in minimum 1 character or routing number.
        allowEmptyValue: false
        schema:
          type: string
      - name: priority
        in: query
        description: Search priority
        allowEmptyValue: false
        schema:
          type: string
      - name: providerId
        in: query
        description: providerId
        allowEmptyValue: false
        schema:
          type: integer
          format: int64
      - name: skip
        in: query
        description: skip (Min 0) - This is not applicable along with 'name' parameter.
        allowEmptyValue: false
        schema:
          type: integer
          format: int32
      - name: top
        in: query
        description: top (Max 500) - This is not applicable along with 'name' parameter.
        allowEmptyValue: false
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/InstitutionResponse'
        400:
          description: 'Y800 : Invalid value for priority<br>Y800 : Invalid value
            for skip<br>Y804 : Permitted values of top between 1 - 500<br>Y821 : Dataset
            not supported<br>'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /accounts/associatedAccounts/{providerAccountId}:
    get:
      tags:
      - Accounts
      summary: Associated Accounts
      description: Yodlee classifies providers into credential-based aggregation and
        Open Banking (OB) providers.<br>This service is associated with the OB aggregation
        flow. As part of the OB solution, financial institutions may merge their subsidiaries
        and provide data as a single OB provider.<br>Before the OB solution, this
        data was aggregated with different provider IDs.<br>This service accepts the
        providerAccountId and returns all accounts of the associated providerAccounts
        that belong to the subsidiary of the financial institution.<br>This data should
        be displayed to the user to let them select the accounts that they wish to
        provide consent to share account data.<br>
      operationId: getAssociatedAccounts
      parameters:
      - name: providerAccountId
        in: path
        description: providerAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AssociatedAccountsResponse'
        400:
          description: 'Y800 : Invalid value for providerAccountId<br>'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
  /accounts/migrateAccounts/{providerAccountId}:
    put:
      tags:
      - Accounts
      summary: Migrate Accounts
      description: This service is associated with the open banking (OB) flow.<br>Before
        invoking this service, display all the associated accounts to the user by
        calling the GET /associatedAccounts API.<br>The migrate accounts API treats
        the user's consent acceptance to initiate account migration. Invoking this
        service indicates that the user has given the consent to access the associated
        account information from the financial institution.<br>If an existing provider
        supports bank, card, and loan accounts, and chose only to provide bank and
        card through OB APIs, a new providerAccountId for OB will be created.<br>The
        bank and card account information will be moved to the new providerAccountId.
        The loan account will be retained in the existing provider account.<br>This
        service returns the OB providerId and the OB providerAccountId. Note that,
        as part of this process, there is a possibility of one or more providerAccounts
        getting merged.<br>The update or delete actions will not be allowed for the
        providerAccounts involved in the migration process until the user completes
        the authorization on the OB provider.<br>The oauthMigrationEligibilityStatus
        attribute in the GET /accounts API response indicates the accounts included
        in the migration process.<br>
      operationId: migrateAccounts
      parameters:
      - name: providerAccountId
        in: path
        description: providerAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/AccountMigrationResponse'
        400:
          description: 'Y800 : Invalid value for providerAccountId<br>'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/YodleeError'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
components:
  schemas:
    LoginForm:
      title: LoginForm
      type: object
      properties:
        mfaInfoTitle:
          type: string
          description: The title for the MFA information demanded from the user.This
            is the title displayed in the provider site.This field is applicable for
            MFA form types only.
          readOnly: true
        help:
          type: string
          description: The help that can be displayed to the customer in the login
            form.
          readOnly: true
        forgetPasswordURL:
          type: string
          description: The forget password URL of the provider site.
        formType:
          type: string
          description: The type of the forms for which the user information is required.
          enum:
          - login
          - questionAndAnswer
          - token
          - image
        mfaInfoText:
          type: string
          description: The text displayed in the provider site while requesting the
            user's MFA information. This field is applicable for MFA form types only.
          readOnly: true
        loginHelp:
          type: string
          description: The help that can be displayed to the customer in the login
            form.
          readOnly: true
        mfaTimeout:
          type: integer
          description: The amount of time before which the user is expected to provide
            MFA information. This field is applicable for MFA form types only. This
            would be an useful information that could be displayed to the users.
          format: int64
          readOnly: true
        id:
          type: integer
          description: The identifier of the login form.
          format: int64
        row:
          type: array
          description: This indicates one row in the form. The row will have one label.
            But it may have single or multiple fields.
          items:
            $ref: '#/components/schemas/Row'
    AccountMigrationResponse:
      title: AccountMigrationResponse
      type: object
      properties:
        providerId:
          type: integer
          format: int64
          readOnly: true
        providerAccountId:
          type: integer
          format: int64
          readOnly: true
    AssociatedAccountsResponse:
      title: AssociatedAccountsResponse
      type: object
      properties:
        account:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AssociatedAccount'
    AssociatedAccount:
      title: AssociatedAccount
      type: object
      properties:
        lastUpdated:
          type: string
          description: 'The date time the account information was last retrieved from
            the provider site and updated in the Yodlee system.'
          readOnly: true
        balance:
          $ref: '#/components/schemas/Money'
        accountName:
          type: string
          description: 'The account name as it appears at the site.<br>(The POST accounts
            service response return this field as name)'
          readOnly: true
        providerId:
          type: string
          description: 'Identifier of the provider site. The primary key of provider resource.'
          readOnly: true
        accountType:
          type: string
          description: 'The type of account that is aggregated, i.e., savings, checking,
            credit card, charge, HELOC, etc. The account type is derived based on
            the attributes of the account.'
          readOnly: true
        currentBalance:
          $ref: '#/components/schemas/Money'
        providerAccountId:
          type: integer
          description: 'The primary key of the provider account resource.'
          format: int64
          readOnly: true
        CONTAINER:
          type: string
          description: 'The type of service. E.g., Bank, Credit Card, Investment, Insurance, etc.'
          readOnly: true
          enum:
          - bank
          - creditCard
          - investment
          - insurance
          - loan
          - reward
          - bill
          - realEstate
          - otherAssets
          - otherLiabilities
        id:
          type: integer
          description: 'The primary key of the account resource and the unique identifier for the account.'
          format: int64
          readOnly: true
        accountNumber:
          type: string
          description: 'The account number as it appears on the site.<br><br><b>Additional Details</b>:<b>
            Bank/ Loan/ Insurance/ Investment/Bill</b>:<br> The account number for
            the bank account as it appears at the site.<br><b>Credit Card</b>: The
            account number of the card account as it appears at the site,<br>i.e.,
            the card number.The account number can be full or partial based on how
            it is displayed in the account summary page of the site.In most cases,
            the site does not display the full account number in the account summary
            page and additional navigation is required to aggregate it.'
          readOnly: true
        providerName:
          type: string
          description: 'Service provider or institution name where the account originates.
            This belongs to the provider resource.'
          readOnly: true
        availableBalance:
          $ref: '#/components/schemas/Money'
    ProviderAccounts:
      title: ProviderAccount
      type: object
      properties:
        lastUpdated:
          type: string
          description: Indicate when the providerAccount is last updated successfully.
          readOnly: true
        consentId:
          type: integer
          description: Consent Id generated through POST Consent.
          format: int64
        preferences:
          $ref: '#/components/schemas/ProviderAccountPreferences'
        createdDate:
          type: string
          description: The date on when the provider account is created in the system.
          readOnly: true
        aggregationSource:
          type: string
          description: The source through which the providerAccount is added in the
            system.
          readOnly: true
          enum:
          - SYSTEM
          - USER
        oauthMigrationStatus:
          type: string
          description: Indicates the migration status of the provider account from
            screen-scraping provider to the Open Banking provider.
          readOnly: true
          enum:
          - IN_PROGRESS
          - TO_BE_MIGRATED
          - COMPLETED
        providerId:
          type: integer
          description: Unique identifier for the provider resource. This denotes the
            provider for which the provider account id is generated by the user.
          format: int64
          readOnly: true
        isManual:
          type: boolean
          description: Indicates whether account is a manual or aggregated provider
            account.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          format: int64
          readOnly: true
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/AccountDataset'
        status:
          type: string
          description: The status of last update attempted for the account.
          readOnly: true
          enum:
          - LOGIN_IN_PROGRESS
          - USER_INPUT_REQUIRED
          - IN_PROGRESS
          - PARTIAL_SUCCESS
          - SUCCESS
          - FAILED
    ProviderAccount:
      title: ProviderAccount
      type: object
      properties:
        lastUpdated:
          type: string
          description: Indicate when the providerAccount is last updated successfully.
          readOnly: true
        consentId:
          type: integer
          description: Consent Id generated through POST Consent.
          format: int64
        preferences:
          $ref: '#/components/schemas/ProviderAccountPreferences'
        createdDate:
          type: string
          description: The date on when the provider account is created in the system.
          readOnly: true
        aggregationSource:
          type: string
          description: The source through which the providerAccount is added in the
            system.
          readOnly: true
          enum:
          - SYSTEM
          - USER
        oauthMigrationStatus:
          type: string
          description: Indicates the migration status of the provider account from
            screen-scraping provider to the Open Banking provider.
          readOnly: true
          enum:
          - IN_PROGRESS
          - TO_BE_MIGRATED
          - COMPLETED
        providerId:
          type: integer
          description: Unique identifier for the provider resource. This denotes the
            provider for which the provider account id is generated by the user.
          format: int64
          readOnly: true
        requestId:
          type: string
          description: Unique id generated to indicate the request.
          readOnly: true
        isManual:
          type: boolean
          description: Indicates whether account is a manual or aggregated provider
            account.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          format: int64
          readOnly: true
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/AccountDataset'
        status:
          type: string
          description: The status of last update attempted for the account.
          readOnly: true
          enum:
          - LOGIN_IN_PROGRESS
          - USER_INPUT_REQUIRED
          - IN_PROGRESS
          - PARTIAL_SUCCESS
          - SUCCESS
          - FAILED
    Institution:
      title: Institution
      type: object
      properties:
        languageISOCode:
          type: string
          description: The language in which the provider details are provided. For
            example, a site supports two languages English and French. English being
            the primary language, the provider response will be provided in French
            depending on the user's locale. The language follows the two letter ISO
            code.
          readOnly: true
        favicon:
          type: string
          description: Favicon link of the provider.
          readOnly: true
        countryISOCode:
          type: string
          description: Country to which the provider belongs.
          readOnly: true
        isAddedByUser:
          type: string
          description: Indicates that the site has been added by the user at least
            once.
          readOnly: true
        PRIORITY:
          type: string
          description: Indicates the priority for which the service is invoked.
          readOnly: true
          enum:
          - POPULAR
          - SEARCH
          - ALL
        primaryLanguageISOCode:
          type: string
          description: The primary language of the site.
          readOnly: true
        baseUrl:
          type: string
          description: The base URL of the provider's site.
          readOnly: true
        loginUrl:
          type: string
          description: The login URL of the provider's site.
          readOnly: true
        providerId:
          type: array
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          readOnly: true
          items:
            type: integer
            format: int64
        name:
          type: string
          description: The name of a provider site.
          readOnly: true
        logo:
          type: string
          description: The logo link of the provider institution. The link will return
            the logo in the PNG format.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider site.(e.g., financial institution
            sites, biller sites, lender sites, etc.).
          format: int64
          readOnly: true
        lastModified:
          type: string
          description: Determines when the provider information was updated by Yodlee.
            If the customer caches the data, the cache is recommended to be refreshed
            based on this field.
          readOnly: true
    ProviderAccountPreferences:
      title: ProviderAccountPreferences
      type: object
      properties:
        isDataExtractsEnabled:
          type: boolean
          description: Indicates if the updates to the provider account should be
            part of the data extracts event notification or the data extract data
            retrieval service.
        linkedProviderAccountId:
          type: integer
          description: LinkedproviderAccountd is a providerAccountId linked by the
            user to the primary provider account. <br>LinkedProviderAccountId and
            the providerAccountId belongs to the same institution.
          format: int64
        isAutoRefreshEnabled:
          type: boolean
          description: Indicates if auto-refreshes have to be triggered for the provider
            account.
    Capability:
      title: Capability
      type: object
      properties:
        container:
          type: array
          readOnly: true
          deprecated: true
          items:
            type: string
            enum:
            - bank
            - creditCard
            - investment
            - insurance
            - loan
            - reward
            - bill
            - realEstate
            - otherAssets
            - otherLiabilities
        name:
          type: string
          readOnly: true
    YodleeError:
      title: YodleeError
      type: object
      properties:
        errorMessage:
          type: string
        errorCode:
          type: string
        referenceCode:
          type: string
    Consent:
      title: Consent
      required:
      - consentId
      - consentStatus
      - expirationDate
      - providerId
      - scope
      - title
      - titleBody
      type: object
      properties:
        dataAccessFrequency:
          type: string
          description: Data Access Frequency explains the number of times that this
            consent can be used.<br> Otherwise called as consent frequency type.
          enum:
          - ONE_TIME
          - RECURRING
        titleBody:
          type: string
          description: Description for the title.
        consentId:
          type: integer
          description: Consent Id generated through POST Consent.
          format: int64
        providerId:
          type: integer
          description: Provider Id for which the consent needs to be generated.
          format: int64
        consentStatus:
          type: string
          description: Status of the consent.
          enum:
          - ACTIVE
          - CONSENT_GENERATED
          - CONSENT_ACCEPTED
          - CONSENT_AUTHORIZED
          - CONSENT_MISMATCH
        providerAccountId:
          type: integer
          description: Unique identifier for the provider account resource. <br>This
            is created during account addition.
          format: int64
          readOnly: true
        scope:
          type: array
          description: Scope describes about the consent permissions and their purpose.
          items:
            $ref: '#/components/schemas/Scope'
        title:
          type: string
          description: Title for the consent form.
        expirationDate:
          type: string
          description: Consent expiry date.
    InstitutionResponse:
      title: InstitutionResponse
      type: object
      properties:
        institution:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Institution'
    Scope:
      title: Scope
      required:
      - scopeId
      - title
      - titleBody
      type: object
      properties:
        titleBody:
          type: array
          description: Title body that explains the purpose of the scope.
          items:
            type: string
        scopeId:
          type: string
          description: Unique Dataset Cluster name for the consent group like <br/>
            ACCOUNT_DETAILS<br/> STATEMENT_DETAILS<br/> CONTACT_DETAILS<br/> TRANSACTION_DETAILS
          enum:
          - ACCOUNT_DETAILS
          - TRANSACTION_DETAILS
          - STATEMENT_DETAILS
          - CONTACT_DETAILS
        datasetAttributes:
          type: array
          description: Permissions that are associated with the Consent group like<br/>
            BASIC_AGG_DATA.BASIC_ACCOUNT_INFO<br/> BASIC_AGG_DATA.ACCOUNT_DETAILS<br/>
            BASIC_AGG_DATA.STATEMENTS<br/> BASIC_AGG_DATA.TRANSACTIONS<br/> ACCT_PROFILE.HOLDER_NAME<br/>
            ACCT_PROFILE.FULL_ACCT_NUMBER<br/> ACCT_PROFILE.BANK_TRANSFER_CODE<br/>
            ACCT_PROFILE.HOLDER_DETAILS
          items:
            type: string
        title:
          type: string
          description: Title for the Data Cluster.
    UpdatedConsentResponse:
      title: UpdatedConsentResponse
      type: object
      properties:
        consent:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UpdateConsent'
    UpdateConsent:
      title: UpdateConsent
      type: object
      properties:
        consentId:
          type: integer
          description: Unique identifier for consent. This is created during consent
            creation.
          format: int64
        authorizationUrl:
          type: string
          description: Authorization url generated for the request through PUT Consent
            to reach endsite.
        providerId:
          type: integer
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          format: int64
    ProviderAccountDetailResponse:
      title: ProviderAccountDetailResponse
      type: object
      properties:
        providerAccount:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ProviderAccountDetail'
    ProviderAccountDetail:
      title: ProviderAccountDetail
      required:
      - consentId
      type: object
      properties:
        oauthMigrationStatus:
          type: string
          description: Indicates the migration status of the provider account from
            screen-scraping provider to the Open Banking provider.
          readOnly: true
          enum:
          - IN_PROGRESS
          - TO_BE_MIGRATED
          - COMPLETED
        lastUpdated:
          type: string
          description: Indicate when the providerAccount is last updated successfully.
          readOnly: true
        consentId:
          type: integer
          description: Consent Id generated through POST Consent.
          format: int64
        loginForm:
          type: array
          description: This entity gets returned in the response for only MFA based
            provider accounts during the add/update account polling process. This
            indicates that the MFA information is expected from the user to complete
            the process. This represents the structure of MFA form that is displayed
            to the user in the provider site.
          readOnly: true
          items:
            $ref: '#/components/schemas/LoginForm'
        preferences:
          $ref: '#/components/schemas/ProviderAccountPreferences'
        createdDate:
          type: string
          description: The date on when the provider account is created in the system.
          readOnly: true
        aggregationSource:
          type: string
          description: The source through which the providerAccount is added in the
            system.
          readOnly: true
          enum:
          - SYSTEM
          - USER
        providerId:
          type: integer
          description: Unique identifier for the provider resource. This denotes the
            provider for which the provider account id is generated by the user.
          format: int64
          readOnly: true
        requestId:
          type: string
          description: Unique id generated to indicate the request.
          readOnly: true
        isManual:
          type: boolean
          description: Indicates whether account is a manual or aggregated provider
            account.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          format: int64
          readOnly: true
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/AccountDataset'
        status:
          type: string
          description: The status of last update attempted for the account.
          readOnly: true
          enum:
          - LOGIN_IN_PROGRESS
          - USER_INPUT_REQUIRED
          - IN_PROGRESS
          - PARTIAL_SUCCESS
          - SUCCESS
          - FAILED
    UpdatedProviderAccountResponse:
      title: UpdatedProviderAccountResponse
      type: object
      properties:
        providerAccount:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UpdatedProviderAccount'
    CreatedConsentResponse:
      title: CreatedConsentResponse
      type: object
      properties:
        consent:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CreateConsent'
    ProviderDetailResponse:
      title: ProviderDetailResponse
      type: object
      properties:
        provider:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ProviderDetail'
    Attribute:
      title: Attribute
      type: object
      properties:
        container:
          type: array
          description: Containers for which the attributes are supported.
          items:
            type: string
            enum:
            - bank
            - creditCard
            - investment
            - insurance
            - loan
            - reward
            - bill
            - realEstate
            - otherAssets
            - otherLiabilities
        containerAttributes:
          $ref: '#/components/schemas/ContainerAttributes'
        name:
          type: string
          description: Attributes that are supported for a dataset.
          enum:
          - BASIC_ACCOUNT_INFO
          - TRANSACTIONS
          - STATEMENTS
          - HOLDINGS
          - ACCOUNT_DETAILS
          - TAX
          - EBILLS
          - FULL_ACCT_NUMBER
          - BANK_TRANSFER_CODE
          - HOLDER_NAME
          - HOLDER_DETAILS
          - PAYMENT_PROFILE
          - PAYMENT_DETAILS
          - INTEREST_DETAILS
          - COVERAGE
    Providers:
      title: Providers
      type: object
      properties:
        languageISOCode:
          type: string
          description: The language in which the provider details are provided. For
            example, a site supports two languages English and French. English being
            the primary language, the provider response will be provided in French
            depending on the user's locale. The language follows the two letter ISO
            code.
          readOnly: true
        forgetPasswordUrl:
          type: string
          description: The forget password URL of the provider site.
          readOnly: true
        favicon:
          type: string
          description: Favicon link of the provider.
          readOnly: true
        accountType:
          type: array
          description: 'AccountType supported by the provider, eg: Brokerage Cash,
            Current.'
          readOnly: true
          items:
            type: string
            enum:
            - CURRENT
            - BROKERAGE_CASH
        countryISOCode:
          type: string
          description: Country to which the provider belongs.
          readOnly: true
        isAddedByUser:
          type: string
          description: Indicates that the site has been added by the user at least
            once.
          readOnly: true
        PRIORITY:
          type: string
          description: Indicates the priority for which the service is invoked.
          readOnly: true
          enum:
          - POPULAR
          - SUGGESTED
          - COBRAND
          - SEARCH
          - ALL
        associatedProviderIds:
          type: array
          description: The screen-scraping providers that are associated to the Open Banking provider ID.
          readOnly: true
          items:
            type: integer
            format: int64
        loginHelp:
          type: string
          description: Help text to guide the user to choose the correct provider
            site.
          readOnly: true
        primaryLanguageISOCode:
          type: string
          description: The primary language of the site.
          readOnly: true
        help:
          type: string
          description: Text to guide user through linking an account that belongs
            to the site.
          readOnly: true
        baseUrl:
          type: string
          description: The base URL of the provider's site.
          readOnly: true
        capability:
          type: array
          description: Capability of the site.
          deprecated: true
          readOnly: true
          items:
            $ref: '#/components/schemas/Capability'
        isConsentRequired:
          type: boolean
          description: Indicates if a provider site requires consent.
          readOnly: true
        loginUrl:
          type: string
          description: The login URL of the provider's site.
          readOnly: true
        isAutoRefreshEnabled:
          type: boolean
          description: Indicates if a provider site is auto-refreshed.
          readOnly: true
        name:
          type: string
          description: The name of a provider site.
          readOnly: true
        logo:
          type: string
          description: The logo link of the provider institution. The link will return
            the logo in the PNG format.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider site(e.g., financial institution
            sites, biller sites, lender sites, etc.).
          format: int64
          readOnly: true
        lastModified:
          type: string
          description: Determines when the provider information was updated by Yodlee.
            If the customer caches the data, the cache is recommended to be refreshed
            based on this field.
          readOnly: true
        authParameter:
          type: array
          description: AuthParameter appears in the response only in case of token-based
            aggregation sites.
          readOnly: true
          items:
            type: string
            enum:
            - authorizationCode
            - idToken
            - authResponse
        authType:
          type: string
          description: The authentication type enabled at the provider site.
          readOnly: true
          enum:
          - OAUTH
          - CREDENTIALS
          - MFA_CREDENTIALS
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/ProvidersDataset'
        status:
          type: string
          description: Determines if the provider is supported for the cobrand (customer),
            is in the beta stage, etc.
          readOnly: true
          enum:
          - Supported
          - Beta
          - Unsupported
    ProvidersDataset:
      title: ProvidersDataset
      type: object
      properties:
        name:
          type: string
          description: The name of the dataset requested from the provider site.
          enum:
          - BASIC_AGG_DATA
          - ADVANCE_AGG_DATA
          - ACCT_PROFILE
          - DOCUMENT
        attribute:
          type: array
          description: The name of the dataset attribute suported by the provider.
          items:
            $ref: '#/components/schemas/Attribute'
    ConsentResponse:
      title: ConsentResponse
      type: object
      properties:
        consent:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Consent'
    CreateConsent:
      title: CreateConsent
      required:
      - consentId
      - consentStatus
      - expirationDate
      - providerId
      - scope
      - title
      - titleBody
      type: object
      properties:
        dataAccessFrequency:
          type: string
          description: Data Access Frequency explains the number of times that this
            consent can be used.<br> Otherwise called as consent frequency type.
          enum:
          - ONE_TIME
          - RECURRING
        titleBody:
          type: string
          description: Description for the title.
        consentId:
          type: integer
          description: Consent Id generated through POST Consent.
          format: int64
        providerId:
          type: integer
          description: Provider Id for which the consent needs to be generated.
          format: int64
        consentStatus:
          type: string
          description: Status of the consent.
          enum:
          - ACTIVE
          - CONSENT_GENERATED
          - CONSENT_ACCEPTED
          - CONSENT_AUTHORIZED
          - CONSENT_MISMATCH
        scope:
          type: array
          description: Scope describes about the consent permissions and their purpose.
          items:
            $ref: '#/components/schemas/Scope'
        title:
          type: string
          description: Title for the consent form.
        expirationDate:
          type: string
          description: Consent expiry date.
    ProviderResponse:
      title: ProviderResponse
      type: object
      properties:
        provider:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Providers'
    UpdateConsentRequest:
      title: UpdateConsentRequest
      type: object
      properties:
        scopeId:
          type: array
          description: Applicable Open Banking data cluster values.
          items:
            type: string
            enum:
            - ACCOUNT_DETAILS
            - TRANSACTION_DETAILS
            - STATEMENT_DETAILS
            - CONTACT_DETAILS
    ProviderAccountRequest:
      title: ProviderAccountRequest
      required:
      - field
      type: object
      properties:
        consentId:
          type: integer
          description: Consent Id generated for the request through POST Consent.
          format: int64
        preferences:
          $ref: '#/components/schemas/ProviderAccountPreferences'
        aggregationSource:
          type: string
          enum:
          - SYSTEM
          - USER
        field:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        datasetName:
          type: array
          items:
            type: string
            enum:
            - BASIC_AGG_DATA
            - ADVANCE_AGG_DATA
            - ACCT_PROFILE
            - DOCUMENT
        dataset:
          type: array
          items:
            $ref: '#/components/schemas/ProvidersDataset'
    AddedProviderAccount:
      title: AddedProviderAccount
      type: object
      properties:
        lastUpdated:
          type: string
          description: Indicate when the providerAccount is last updated successfully.
          readOnly: true
        aggregationSource:
          type: string
          description: The source through which the providerAccount is added in the
            system.
          readOnly: true
          enum:
          - SYSTEM
          - USER
        oauthMigrationStatus:
          type: string
          description: Indicates the migration status of the provider account from
            screen-scraping provider to the Open Banking provider.
          readOnly: true
          enum:
          - IN_PROGRESS
          - TO_BE_MIGRATED
          - COMPLETED
        providerId:
          type: integer
          description: Unique identifier for the provider resource. This denotes the
            provider for which the provider account id is generated by the user.
          format: int64
          readOnly: true
        requestId:
          type: string
          description: Unique id generated to indicate the request.
          readOnly: true
        isManual:
          type: boolean
          description: Indicates whether account is a manual or aggregated provider
            account.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          format: int64
          readOnly: true
        createdDate:
          type: string
          description: The date on when the provider account is created in the system.
          readOnly: true
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/AccountDataset'
        status:
          type: string
          description: The status of last update attempted for the account.
          readOnly: true
          enum:
          - LOGIN_IN_PROGRESS
          - USER_INPUT_REQUIRED
          - IN_PROGRESS
          - PARTIAL_SUCCESS
          - SUCCESS
          - FAILED
    ProviderAccountResponse:
      title: ProviderAccountResponse
      type: object
      properties:
        providerAccount:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ProviderAccounts'
    AddedProviderAccountResponse:
      title: AddedProviderAccountResponse
      type: object
      properties:
        providerAccount:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AddedProviderAccount'
    Option:
      title: Option
      type: object
      properties:
        displayText:
          type: string
          description: The text that is displayed to the user for that option in the
            provider site.
        optionValue:
          type: string
          description: The value that is associated with the option.
        isSelected:
          type: boolean
          description: The option that is selected by default in the provider site.
    ProviderAccountPreferencesRequest:
      title: ProviderAccountPreferencesRequest
      type: object
      properties:
        preferences:
          $ref: '#/components/schemas/ProviderAccountPreferences'
    Row:
      title: Row
      type: object
      properties:
        fieldRowChoice:
          type: string
          description: Fields that belong to a particular choice are collected together
            using this field.
        field:
          type: array
          description: Details of fields that belong to the row.
          items:
            $ref: '#/components/schemas/Field'
        form:
          type: string
          description: Form denotes the set of the fields that are related.
        id:
          type: string
          description: Unique identifier of the row.
        label:
          type: string
          description: The label text displayed for a row in the form.
    Field:
      title: Field
      type: object
      properties:
        prefix:
          type: string
          description: The prefix string that has to be displayed before the field
            value.
          readOnly: true
        minLength:
          type: integer
          description: The minimum length of the login form field.
          format: int64
          readOnly: true
        valueEditable:
          type: string
          description: Indicates whether the field is editable or not.
          readOnly: true
        isOptional:
          type: boolean
          description: Indicates if a field is an optional field or a mandatory field.
          readOnly: true
        suffix:
          type: string
          description: The suffix string that has to be displayed next to the field
            value.
          readOnly: true
        type:
          type: string
          description: This indicates the display type of the field. For example,
            text box, image, etc.
          readOnly: true
          enum:
          - text
          - password
          - option
          - checkbox
          - radio
          - image
        isValueProvided:
          type: boolean
          description: Indicates that the answer to the security question already
            exists in the Yodlee system.Persuading the user to provide the answer
            to the security question again during the edit-credential flow can be
            avoided.
          readOnly: true
          deprecated: true
        size:
          type: integer
          format: int64
        name:
          type: string
          description: Name of the field.
          readOnly: true
        id:
          type: string
          description: Identifier for the field.
        value:
          type: string
          description: Value expected from the user for the field. This will be blank
            and is expected to be filled and sent back when submitting the login or
            MFA information.
        maxLength:
          type: integer
          description: The maximum length of the login form field.
          format: int64
          readOnly: true
        option:
          type: array
          description: Provides the different values that are available for the user
            to choose. This field is applicable for drop-down or radio field types.
          readOnly: true
          items:
            $ref: '#/components/schemas/Option'
    Money:
      title: Money
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string
          enum:
          - AUD
          - BRL
          - CAD
          - EUR
          - GBP
          - HKD
          - IDR
          - INR
          - JPY
          - NZD
          - SGD
          - USD
          - ZAR
          - CNY
          - VND
    ContainerAttributes:
      title: ContainerAttributes
      type: object
      properties:
        BANK:
          $ref: '#/components/schemas/TransactionDays'
        LOAN:
          $ref: '#/components/schemas/TransactionDays'
        CREDITCARD:
          $ref: '#/components/schemas/TransactionDays'
        INVESTMENT:
          $ref: '#/components/schemas/TransactionDays'
        INSURANCE:
          $ref: '#/components/schemas/TransactionDays'
    TransactionDays:
      title: TransactionDays
      type: object
      properties:
        numberOfTransactionDays:
          type: integer
          format: int32
    AccountDataset:
      title: AccountDataset
      type: object
      properties:
        lastUpdated:
          type: string
          description: Indicate when the dataset is last updated successfully for
            the given provider account.
          readOnly: true
        updateEligibility:
          type: string
          description: Indicate whether the dataset is eligible for update or not.
          readOnly: true
          enum:
          - ALLOW_UPDATE
          - ALLOW_UPDATE_WITH_CREDENTIALS
          - DISALLOW_UPDATE
        additionalStatus:
          type: string
          description: The status of last update attempted for the dataset.
          readOnly: true
          enum:
          - LOGIN_IN_PROGRESS
          - DATA_RETRIEVAL_IN_PROGRESS
          - ACCT_SUMMARY_RECEIVED
          - AVAILABLE_DATA_RETRIEVED
          - PARTIAL_DATA_RETRIEVED
          - DATA_RETRIEVAL_FAILED
          - DATA_NOT_AVAILABLE
          - ACCOUNT_LOCKED
          - ADDL_AUTHENTICATION_REQUIRED
          - BETA_SITE_DEV_IN_PROGRESS
          - CREDENTIALS_UPDATE_NEEDED
          - INCORRECT_CREDENTIALS
          - PROPERTY_VALUE_NOT_AVAILABLE
          - INVALID_ADDL_INFO_PROVIDED
          - REQUEST_TIME_OUT
          - SITE_BLOCKING_ERROR
          - UNEXPECTED_SITE_ERROR
          - SITE_NOT_SUPPORTED
          - SITE_UNAVAILABLE
          - TECH_ERROR
          - USER_ACTION_NEEDED_AT_SITE
          - SITE_SESSION_INVALIDATED
          - NEW_AUTHENTICATION_REQUIRED
          - DATASET_NOT_SUPPORTED
          - ENROLLMENT_REQUIRED_FOR_DATASET
          - CONSENT_EXPIRED
          - CONSENT_REVOKED
          - INCORRECT_OAUTH_TOKEN
          - MIGRATION_IN_PROGRESS
        nextUpdateScheduled:
          type: string
          description: Indicates when the next attempt to update the dataset is scheduled.
          readOnly: true
        name:
          type: string
          description: The name of the dataset requested from the provider site.
          enum:
          - BASIC_AGG_DATA
          - ADVANCE_AGG_DATA
          - ACCT_PROFILE
          - DOCUMENT
        lastUpdateAttempt:
          type: string
          description: Indicate when the last attempt was performed to update the
            dataset for the given provider account.
          readOnly: true
    ProviderDetail:
      title: ProviderDetail
      type: object
      properties:
        languageISOCode:
          type: string
          description: The language in which the provider details are provided. For
            example, a site supports two languages English and French. English being
            the primary language, the provider response will be provided in French
            depending on the user's locale. The language follows the two letter ISO
            code.
          readOnly: true
        favicon:
          type: string
          description: Favicon link of the provider.
          readOnly: true
        accountType:
          type: array
          description: 'AccountType supported by the provider, eg: Brokerage Cash,
            Current.'
          readOnly: true
          items:
            type: string
            enum:
            - CURRENT
            - BROKERAGE_CASH
        countryISOCode:
          type: string
          description: Country to which the provider belongs.
          readOnly: true
        isAddedByUser:
          type: string
          description: Indicates that the site has been added by the user at least
            once.
          readOnly: true
        PRIORITY:
          type: string
          description: Indicates the priority for which the service is invoked.
          readOnly: true
          enum:
          - POPULAR
          - SUGGESTED
          - COBRAND
          - SEARCH
          - ALL
        associatedProviderIds:
          type: array
          description: The screen-scraping providers that are associated to the Open Banking provider ID.
          readOnly: true
          items:
            type: integer
            format: int64
        primaryLanguageISOCode:
          type: string
          description: The primary language of the site.
          readOnly: true
        help:
          type: string
          description: Text to guide user through linking an account that belongs
            to the site.
          readOnly: true
        baseUrl:
          type: string
          description: The base URL of the provider's site.
          readOnly: true
        capability:
          type: array
          description: Capability of the site.
          deprecated: true
          readOnly: true
          items:
            $ref: '#/components/schemas/Capability'
        loginForm:
          type: array
          description: This entity represents the structure of the login or MFA form
            that is displayed to the user at the provider site. For performance reasons,
            this field is returned only when a single provider is requested in the
            request.
          readOnly: true
          items:
            $ref: '#/components/schemas/LoginForm'
        isConsentRequired:
          type: boolean
          description: Indicates if a provider site requires consent.
          readOnly: true
        loginUrl:
          type: string
          description: The login URL of the provider's site.
          readOnly: true
        isAutoRefreshEnabled:
          type: boolean
          description: Indicates if a provider site is auto-refreshed.
          readOnly: true
        name:
          type: string
          description: The name of a provider site.
          readOnly: true
        logo:
          type: string
          description: The logo link of the provider institution. The link will return
            the logo in the PNG format.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider site(e.g., financial institution
            sites, biller sites, lender sites, etc.).
          format: int64
          readOnly: true
        lastModified:
          type: string
          description: Determines when the provider information was updated by Yodlee.
            If the customer caches the data, the cache is recommended to be refreshed
            based on this field.
          readOnly: true
        authParameter:
          type: array
          description: AuthParameter appears in the response only in case of token-based
            aggregation sites.
          readOnly: true
          items:
            type: string
            enum:
            - authorizationCode
            - idToken
            - authResponse
        authType:
          type: string
          description: The authentication type enabled at the provider site.
          readOnly: true
          enum:
          - OAUTH
          - CREDENTIALS
          - MFA_CREDENTIALS
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/ProvidersDataset'
        status:
          type: string
          description: Determines if the provider is supported for the cobrand (customer),
            is in the beta stage, etc.
          readOnly: true
          enum:
          - Supported
          - Beta
          - Unsupported
    UpdatedProviderAccount:
      title: UpdatedProviderAccount
      type: object
      properties:
        lastUpdated:
          type: string
          description: Indicate when the providerAccount is last updated successfully.
          readOnly: true
        loginForm:
          type: array
          description: This entity gets returned in the response for only MFA based
            provider accounts during the add/update account polling process. This
            indicates that the MFA information is expected from the user to complete
            the process. This represents the structure of MFA form that is displayed
            to the user in the provider site.
          readOnly: true
          items:
            $ref: '#/components/schemas/LoginForm'
        createdDate:
          type: string
          description: The date on when the provider account is created in the system.
          readOnly: true
        aggregationSource:
          type: string
          description: The source through which the providerAccount is added in the
            system.
          readOnly: true
          enum:
          - SYSTEM
          - USER
        oauthMigrationStatus:
          type: string
          description: Indicates the migration status of the provider account from
            screen-scraping provider to the Open Banking provider.
          readOnly: true
          enum:
          - IN_PROGRESS
          - TO_BE_MIGRATED
          - COMPLETED
        providerId:
          type: integer
          description: Unique identifier for the provider resource. This denotes the
            provider for which the provider account id is generated by the user.
          format: int64
          readOnly: true
        requestId:
          type: string
          description: Unique id generated to indicate the request.
          readOnly: true
        isManual:
          type: boolean
          description: Indicates whether account is a manual or aggregated provider
            account.
          readOnly: true
        id:
          type: integer
          description: Unique identifier for the provider account resource. This is
            created during account addition.
          format: int64
          readOnly: true
        dataset:
          type: array
          description: Logical grouping of dataset attributes into datasets such as
            Basic Aggregation Data, Account Profile and Documents.
          readOnly: true
          items:
            $ref: '#/components/schemas/AccountDataset'
        status:
          type: string
          description: The status of last update attempted for the account.
          readOnly: true
          enum:
          - LOGIN_IN_PROGRESS
          - USER_INPUT_REQUIRED
          - IN_PROGRESS
          - PARTIAL_SUCCESS
          - SUCCESS
          - FAILED
    CreateConsentRequest:
      title: CreateConsentRequest
      type: object
      properties:
        providerId:
          type: integer
          description: Unique identifier for the provider site.(e.g., financial institution
            sites, biller sites, lender sites, etc.)
          format: int64
        dataset:
          type: array
          description: The name of the dataset attribute supported by the provider.If
            no dataset value is provided, the datasets that are configured for the
            customer will be considered.The configured dataset can be overridden by
            providing the dataset as an input.
          items:
            $ref: '#/components/schemas/ProvidersDataset'
        applicationName:
          type: string
          description: The name of the application.If no applicationName is provided
            in the input, the default applicationName will be considered.